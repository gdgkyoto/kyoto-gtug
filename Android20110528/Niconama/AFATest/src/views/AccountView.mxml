<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" title="ニコ生コメントビューア">
	<fx:Declarations>
		<!-- 非ビジュアルエレメント (サービス、値オブジェクトなど) をここに配置 -->
	</fx:Declarations>

	<fx:Script>
		<![CDATA[
			
			import views.NiconamaConnector;
			import mx.core.SoundAsset;
			
			private var mail:String;
			private var password:String;
			private var liveId:String;
			private var ticket:String;
			private var rtmp:String;
			
			//public var niconamaConnector:NiconamaConnector = NiconamaConnector.niconamaConnector;
			//public var authData:NiconamaAuthData = NiconamaAuthData.authData;
			//public var niconamaConnector:NiconamaConnector = new NiconamaConnector();
			//public var authData:NiconamaAuthData = new NiconamaAuthData();
			
			protected function btn_ok_clickHandler(event:MouseEvent):void
			{	
				mail = text_mail.text;
				password = text_password.text;
				liveId = text_liveId.text;
				login4Cookie();
				function login4Ticket_success():void
				{
					function getPlayerStatus_success():void
					{
						// 動画再生は未実装のためコメントアウト
						//playLive();
					}
					getPlayerStatus(getPlayerStatus_success, function():void{});
				}
				login4Ticket(login4Ticket_success, function():void{});
			}
			private function login4Cookie():void
			{
				var request:URLRequest = new URLRequest("https://secure.nicovideo.jp/secure/login?site=nicolive");
				var loader:URLLoader = new URLLoader();
				request.method = "POST";
				request.contentType = "application/x-www-form-urlencoded";
				request.data = "next_url=&mail=" + encodeURIComponent(mail) + "&password=" + encodeURIComponent(password);
				loader.addEventListener(Event.COMPLETE, function (event:Event):void { });
				loader.load(request);
			}
			private function login4Ticket(callbackSuccess:Function, callbackFailure:Function):void
			{
				var request:URLRequest = new URLRequest("https://secure.nicovideo.jp/secure/login?site=nicolive_antenna");
				var loader:URLLoader = new URLLoader();
				request.method = "POST";
				request.contentType = "application/x-www-form-urlencoded";
				request.data = "mail=" + encodeURIComponent(mail) + "&password=" + encodeURIComponent(password);
				loader.addEventListener(Event.COMPLETE, function (event:Event):void {
					var xml:XML = new XML(event.target.data);
					var status:String = xml.attribute("status").toXMLString();
					if (status == 'ok') {
						callbackSuccess();
					} else {
						callbackFailure();
					}
				});
				loader.load(request);
			}
			private function getPlayerStatus(callbackSuccess:Function, callbackFailure:Function):void
			{
				var request:URLRequest = new URLRequest("http://live.nicovideo.jp/api/getplayerstatus?v=" + liveId);
				var loader:URLLoader = new URLLoader();
				request.method = "GET";
				loader.addEventListener(Event.COMPLETE, function (event:Event):void {
					var xml:XML = new XML(event.target.data);
					trace("event.target.data="+event.target.data);
					rtmp = xml.child("rtmp")[0].child("url")[0].text();
					ticket = xml.child("rtmp")[0].child("ticket")[0].text();
					//authData = new NiconamaAuthData();
					NiconamaAuthData.authData.parseGetPlayerStatusResult(event.target.data);
					
					// イベントハンドラ
					function receiveHandler(mes):void{
						trace("受信"+mes);
						var xml:XML = new XML(mes);
						var cmtStr = xml.text();
						trace("コメント=" + cmtStr);
						var label:Label = new Label();
						
						//commen0.text = cmtStr;
						//label.text = cmtStr;
						textarea.text = cmtStr + "\r" + textarea.text;
					}

					
					NiconamaConnector.niconamaConnector.setReceiveHandler(receiveHandler);
					NiconamaConnector.niconamaConnector.connectCommentServer(NiconamaAuthData.authData);
					callbackSuccess();
				});
				loader.load(request);
			}
			private function playLive():void
			{
				trace("playLive1 "+rtmp);
				var video:Video = new Video();
				textarea.text = rtmp;
//				video_panel.addChild(video);
				var nc:NetConnection = new NetConnection();
				trace("playLive2");
				nc.addEventListener(NetStatusEvent.NET_STATUS, function(event:NetStatusEvent):void{
					trace(event.info.code);
					switch (event.info.code)
					{
						case "NetConnection.Connect.Success":
							trace("Event NetConnection.Connect.Success1");
							var ns:NetStream = new NetStream(nc, NetStream.CONNECT_TO_FMS);
							
							function nsHandler(e):void
							{
							    trace("nsHandler "+e);
							}
							ns.addEventListener(NetStatusEvent.NET_STATUS,nsHandler);
							trace("Event NetConnection.Connect.Success2");
							
							trace("Event NetConnection.Connect.Success3");
							
							ns.play(rtmp);
							trace("Event NetConnection.Connect.Success4");
							video.attachNetStream(ns);
							break;
					}
				});
				trace("playLive3");
				nc.connect(rtmp,ticket);
				trace("playLive4");
			}

				
			[Embed(source="../../assets/SF.mp3")]
			public var bukkomiSound:Class;
			public var bukkomiSoundAsset:SoundAsset = new bukkomiSound() as SoundAsset;
			
			private var bukkomiDetector:BukkomiDetector = new BukkomiDetector(bukkomareta);
			
			protected function bukkomareta():void{
				bukkomiSoundAsset.play();
				
				NiconamaConnector.niconamaConnector.sendComment(comment.text);
				trace("ぶっこまれました。");
			}
			
			NiconamaConnector.niconamaConnector.setReceiveHandler(function(comment){
				var xml:XML = new XML(comment);
				trace(comment);
				trace("コメントは" + xml.text() + " : " + xml.attribute("date"));
				
				var commentTime:Number = parseInt(xml.attribute("date")) * 1000;
				var currentTime:Number = ((new Date()).time - 1500);
				if(commentTime > currentTime){
					var synthesisOfSpeech:SynthesisOfSpeech = new SynthesisOfSpeech();
					synthesisOfSpeech.SpeechInJpn(xml.text(),SynthesisOfSpeech.MALE,true);
				}
			});
			
			protected function btn_send_clickHandler(event:MouseEvent):void
			{
				NiconamaConnector.niconamaConnector.sendComment(comment.text);
				trace("送信しました。");
			}
			
		]]>
	</fx:Script>

	<s:VGroup x="10" y="10" width="460" height="599">
		<s:HGroup width="460" height="60" paddingBottom="10" paddingLeft="10" paddingRight="10"
				  paddingTop="10">
			<s:Label width="120" height="40" text="Mail" verticalAlign="middle"/>
			<s:TextInput id="text_mail" width="300" height="40" text="katou.akihiro@gmail.com"/>
		</s:HGroup>
		<s:HGroup width="460" height="60" paddingBottom="10" paddingLeft="10" paddingRight="10"
				  paddingTop="10">
			<s:Label width="120" height="40" text="Pw" verticalAlign="middle"/>
			<s:TextInput id="text_password" width="300" height="40" displayAsPassword="true"/>
		</s:HGroup>
		<s:HGroup width="460" height="60" paddingBottom="10" paddingLeft="10" paddingRight="10"
				  paddingTop="10">
			<s:Label width="120" height="40" text="LiveID" verticalAlign="middle"/>
			<s:TextInput id="text_liveId" width="300" height="40" text="lv51439269"/>
		</s:HGroup>
		<s:HGroup width="460" height="60" paddingBottom="10" paddingLeft="10" paddingRight="10"
				  paddingTop="10">
			<s:Label width="120" height="40" verticalAlign="middle"/>
			<s:Button width="300" height="40" label="OK" click="btn_ok_clickHandler(event)"/>
		</s:HGroup>
		<s:HGroup id="video_panel" width="460" height="335">
			<s:TextArea id="textarea" width="460" height="337"/>
		</s:HGroup>
	</s:VGroup>
	<s:HGroup x="10" y="617" width="460" height="60" paddingBottom="5" paddingLeft="5"
			  paddingRight="5" paddingTop="5">
		<s:TextInput id="comment" width="360" height="50"/>
		<s:Button width="88" height="49" label="送信" click="btn_send_clickHandler(event)"/>
	</s:HGroup>
</s:View>
